{"mappings":"AAAA,MAAM;IACJ,CAAC,QAAQ,CAAC;IAEV,CAAC,SAAS,CAAC;IAEX,CAAC,eAAe,CAAC;IAEjB,CAAC,SAAS,CAAC;IAEX,YAAY,UAAU,CAAC,CAAC,CAAE;QACxB,MAAM,kBACJ,iBAAiB,4BACjB,kBAAkB,uBAClB,YAAY,wBACZ,kBAAkB,UACnB,GAAG;QAEJ,IAAI,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,eAAe,CAAC;QACvC,IAAI,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,eAAe,CAAC;QACxC,IAAI,CAAC,CAAC,eAAe,GAAG;QACxB,IAAI,CAAC,CAAC,SAAS,GAAG;IACpB;IAEA,CAAC,eAAe,CAAC,QAAQ;QACvB,IAAI,oBAAoB,aAAa,OAAO;YAAC;SAAS;QAEtD,MAAM,WAAW,SAAS,gBAAgB,CAAC;QAE3C,OAAO,MAAM,IAAI,CAAC;IACpB;IAEA,CAAC,WAAW,CAAC,QAAQ;QACnB,IAAI,IAAI,CAAC,CAAC,SAAS,EACjB,IAAI,CAAC,CAAC,WAAW,CAAC;QAGpB,SAAS,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe;IACjD;IAEA,CAAC,WAAW,CAAC,QAAQ;QACnB,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACtB,IAAI,OAAO,UACT,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,eAAe;QAE7C;IACF;IAEA,OAAO;QACL,IAAI,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,WAAW;YAClC,UAAU,gBAAgB,CAAC,SAAS;gBAClC,MAAM,WAAW,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE;gBAE3D,IAAI,CAAC,CAAC,WAAW,CAAC;YACpB;QACF;IACF;AACF;IAEA,2CAAe","sources":["src/index.js"],"sourcesContent":["class Togglefy {\n  #targetEl;\n\n  #triggerEl;\n\n  #toggleClassName;\n\n  #exclusive;\n\n  constructor(options = {}) {\n    const {\n      targetSelector = '.target',\n      triggerSelector = '.trigger',\n      exclusive = false,\n      toggleClassName = 'toggle',\n    } = options;\n\n    this.#targetEl = this.#resolveElements(targetSelector);\n    this.#triggerEl = this.#resolveElements(triggerSelector);\n    this.#toggleClassName = toggleClassName;\n    this.#exclusive = exclusive;\n  }\n\n  #resolveElements(selector) {\n    if (selector instanceof HTMLElement) return [selector];\n\n    const elements = document.querySelectorAll(selector);\n\n    return Array.from(elements);\n  }\n\n  #toggleClass(targetEl) {\n    if (this.#exclusive) {\n      this.#removeClass(targetEl);\n    }\n\n    targetEl.classList.toggle(this.#toggleClassName);\n  }\n\n  #removeClass(exceptEl) {\n    this.#targetEl.forEach((el) => {\n      if (el !== exceptEl) {\n        el.classList.remove(this.#toggleClassName);\n      }\n    });\n  }\n\n  init() {\n    this.#triggerEl.forEach((triggerEl, index) => {\n      triggerEl.addEventListener('click', () => {\n        const targetEl = this.#targetEl[index] || this.#targetEl[0];\n\n        this.#toggleClass(targetEl);\n      });\n    });\n  }\n}\n\nexport default Togglefy;\n"],"names":[],"version":3,"file":"index.module.js.map"}